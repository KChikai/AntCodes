# -*- coding:utf-8 -*-

N = 10
M = 12
ground = [
    ['w', '.', '.', '.', '.', '.', '.', '.', '.', 'w', 'w', '.'],
    ['.', 'w', 'w', 'w', '.', '.', '.', '.', '.', 'w', 'w', 'w'],
    ['.', '.', '.', '.', 'w', 'w', '.', '.', '.', 'w', 'w', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', 'w', '.'],
    ['.', '.', '.', '.', '.', '.', '.', '.', '.', 'w', '.', '.'],
    ['.', '.', 'w', '.', '.', '.', '.', '.', '.', 'w', '.', '.'],
    ['.', 'w', '.', 'w', '.', '.', '.', '.', '.', 'w', 'w', '.'],
    ['w', '.', 'w', '.', 'w', '.', '.', '.', '.', '.', 'w', '.'],
    ['.', 'w', '.', 'w', '.', '.', '.', '.', '.', '.', 'w', '.'],
    ['.', '.', 'w', '.', '.', '.', '.', '.', '.', '.', 'w', '.'],
]


def dfs(x, y):
    global ground, N, M
    ground[x][y] = '.'
    for dx in range(-1, 2):
        for dy in range(-1, 2):
            nx = x + dx
            ny = y + dy
            if 0 <= nx < N and 0 <= ny < M and ground[nx][ny] == 'w':
                dfs(nx, ny)
    return

ans = 0
for i in range(N):
    for j in range(M):
        if ground[i][j] == 'w':
            dfs(i, j)
            ans += 1
print(ans)
